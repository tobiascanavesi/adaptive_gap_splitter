name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow on push of tags starting with 'v'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"  # Specify the Python version you use

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install build dependencies
        run: |
          python -m pip install build

      - name: Install project and development dependencies
        run: |
          python -m pip install .[dev]

      - name: Run Pylint
        run: |
          pylint $(git ls-files '*.py')

      - name: Run Black (Optional)
        run: |
          black --check .

      - name: Run Flake8 (Optional)
        run: |
          flake8 .

      - name: Build a binary wheel and a source tarball
        run: python -m build

      - name: Upload the distribution packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: testpypi
      url: https://test.pypi.org/project/adaptive-gap-splitter/

    permissions:
      id-token: write  # Required for OIDC-based authentication

    steps:
      - uses: actions/checkout@v4

      - name: Download the distribution packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && github.ref == 'refs/heads/main'
    environment:
      name: pypi
      url: https://pypi.org/project/adaptive-gap-splitter/

    permissions:
      id-token: write  # Required for OIDC-based authentication

    steps:
      - uses: actions/checkout@v4

      - name: Download the distribution packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
